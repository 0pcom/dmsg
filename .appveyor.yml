version: "{build}"

environment:
  matrix:
    # For regular jobs, such as push, pr and etc.
    - job_name: Linux
      appveyor_build_worker_image: Ubuntu2004
    - job_name: MacOS
      appveyor_build_worker_image: macos-monterey
    - job_name: Windows
      appveyor_build_worker_image: Visual Studio 2022
    - job_name: Deploy
      appveyor_build_worker_image: Ubuntu2004
  
    # For release, by pushing tag
    - job_name: make-release-linux
      appveyor_build_worker_image: ubuntu2004
      GOARCH: amd64
    - job_name: make-release-darwin
      appveyor_build_worker_image: macos-monterey
      GOARCH: amd64
    - job_name: make-release-windows
      appveyor_build_worker_image: Visual Studio 2022
      GOARCH: amd64
    

for:
  - # Linux
    skip_tags: true
    matrix:
      only:
        - job_name: Linux

    install:
      - gvm install go1.19.2
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1
      - go mod vendor

    before_build:
      - golangci-lint cache clean
      - make check

    build_script:
      - make build

  - # MacOS
    skip_tags: true
    matrix:
      only:
        - job_name: MacOS

    install:
      - gvm install go1.19.3
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1
      - go mod vendor
      - go install golang.org/x/tools/cmd/goimports@latest

    before_build:
      - golangci-lint cache clean
      - make check
    
    build_script:
      - make build


  - # Windows
    skip_tags: true
    matrix:
      only:
        - job_name: Windows

    environment:
      matrix:
        - GOARCH: amd64

    install:
      - choco install make
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.50.1
      - go mod vendor
      - set PATH=C:\Users\appveyor\go\bin;C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%

    before_build:
      - set GO111MODULE=on
      - golangci-lint cache clean
      # - make lint-windows-appveyor
      - make check-windows-appveyor

    build_script:
      - make build-windows

  - # Release (Linux)
    skip_non_tags: true
    matrix:
      only:
        - job_name: make-release-linux
    install:
      - sudo apt update
      - sudo snap install goreleaser --classic
      - make dep-github-release
    build_script:
      - make github-release

  - # Release (Darwin)
    skip_non_tags: true
    matrix:
      only:
        - job_name: make-release-darwin
    install:
      - brew install goreleaser
      - brew install gh
      - brew install jq
      - brew install wget
    build_script:
      - make github-release-darwin

  - # Release (Windows)
    skip_non_tags: true
    matrix:
      only:
        - job_name: make-release-windows
    install:
      - ps: Invoke-WebRequest "https://github.com/goreleaser/goreleaser/releases/download/v1.8.3/goreleaser_Windows_x86_64.zip" -o goreleaser.zip
      - ps: Expand-Archive goreleaser.zip
      - ps: Invoke-WebRequest "https://github.com/cli/cli/releases/download/v2.13.0/gh_2.13.0_windows_amd64.zip" -o gh.zip
      - ps: Expand-Archive gh.zip
      - ps: choco install make
    build_script:
      - make github-release-windows

  - # Deploy
    build: off
    matrix:
      only:
        - job_name: Deploy
    branches:
      only:
        - develop
        - master
    deploy:
      provider: Script
      on:
        branch:
          - master
          - develop
    before_deploy:
      - bash ./docker/scripts/docker-push.sh -t "$APPVEYOR_REPO_BRANCH" -p
    deploy_script:
      - echo "Complete!"
